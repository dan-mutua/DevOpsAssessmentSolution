name: Build and Deploy

on:
  push:
    branches: [ master ]

env:
  AWS_REGION: us-west-2

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push Frontend image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build frontend image
        docker build -t $ECR_REGISTRY/frontend:$IMAGE_TAG -f docker/frontend/Dockerfile docker/frontend
        # Push frontend image
        docker push $ECR_REGISTRY/frontend:$IMAGE_TAG
        echo "::set-output name=frontend_image::$ECR_REGISTRY/frontend:$IMAGE_TAG"

    - name: Build and push Backend image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build backend image
        docker build -t $ECR_REGISTRY/backend:$IMAGE_TAG -f docker/backend/Dockerfile ./backend
        # Push backend image
        docker push $ECR_REGISTRY/backend:$IMAGE_TAG
        echo "::set-output name=backend_image::$ECR_REGISTRY/backend:$IMAGE_TAG"

    - name: Update kube config
      run: aws eks update-kubeconfig --name production-cluster --region ${{ env.AWS_REGION }}

    - name: Deploy to EKS
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Update image tags in Kubernetes manifests
        sed -i "s|${ECR_REGISTRY}/frontend:.*|${ECR_REGISTRY}/frontend:${IMAGE_TAG}|" kubernetes/frontend.yaml
        sed -i "s|${ECR_REGISTRY}/backend:.*|${ECR_REGISTRY}/backend:${IMAGE_TAG}|" kubernetes/backend.yaml
        
        # Apply Kubernetes manifests
        kubectl apply -f kubernetes/frontend.yaml
        kubectl apply -f kubernetes/backend.yaml
